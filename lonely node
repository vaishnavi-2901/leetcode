/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> vec;
    vector<int> getLonelyNodes(TreeNode* root) {
        if(!root) {
            return {}; 
        }
        // if(root->left==nullptr xor root->right==nullptr) vec.push_back(root->left?root->left->val:root->right->val);
        // if(root->left) getLonelyNodes(root->left);
        // if(root->right) getLonelyNodes(root->right);
        // return vec;
        if(root->left!=nullptr and root->right==nullptr) vec.push_back(root->left->val);
        if(root->right!=nullptr and root->left==nullptr) vec.push_back(root->right->val);
        getLonelyNodes(root->left);
        // cout<<root->val;
        getLonelyNodes(root->right);
        return vec;
    }
};
